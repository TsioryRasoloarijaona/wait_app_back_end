// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum ConnectionType {
  pswd
  oauth
}

enum Permissions {
  user
  admin
  superadmin
}

enum requestStatus {
  pending
  approved
  rejected
}


generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String         @unique
  password       String?
  connectionType ConnectionType @default(pswd)
  permissions    Permissions    @default(user)
  EstablishmentAdmin EstablishmentAdmin[]
}


// Moi

model EstablishmentRequest {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  establishmentName String
  status            requestStatus   @default(pending) // "pending", "approved", "rejected"
  createdAt         DateTime @default(now())
}


model establishment {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  category    String
  address     String
  city        String
  createdAt   DateTime      @default(now())
  waitingList WaitingList[]
  EstablishmentAdmin EstablishmentAdmin[]
}

model EstablishmentAdmin {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  userId           String  @db.ObjectId
  establishmentId  String  @db.ObjectId
  establishment     establishment @relation(fields: [establishmentId], references: [id])
  user             Users   @relation(fields: [userId], references: [id])
}

model WaitingList {
   id              String        @id @default(auto()) @map("_id") @db.ObjectId
  userId          String
  name            String
  email           String
  position        Int
  hasLeft         Boolean       @default(false)
  createdAt       DateTime      @default(now())
  etablissementId String        @db.ObjectId
  etablissement   establishment @relation(fields: [etablissementId], references: [id])
}
